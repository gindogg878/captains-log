const express = require("express");
const router = express.Router();
const Logs = require("../models/logs");

//index for log
router.get("/", async (req, res) => {
  try {
    const foundLog = await Logs.find({});
    res.render("Index", { logs: foundLog });
  } catch (err) {
    res.status(400).send(err);
  }
});

//new route
router.get("/new", (req, res) => {
  res.render("New");
});

//delete route
router.delete("/:id", async (req, res) => {
  try {
    await Logs.findByIdAndDelete(req.params.id);
    res.redirect("/logs");
  } catch (err) {
    res.status(400).send(err);
  }
});

//update route (PUT)
router.put("/:id", async (req, res) => {
  try {
    req.body.shipIsBroken = req.body.shipIsBroken === "on";
    const updatedLog = await Logs.findByIdAndUpdate(req.params.id, req.body, {
      new: true,
    });
    res.redirect(`/logs/${req.params.id}`);
  } catch (err) {
    res.status(400).send(err);
  }
});

//create route
router.post("/", async (req, res) => {
  try {
    req.body.shipIsBroken = req.body.shipIsBroken === "on";
    const newLog = await Logs.create(req.body);
    res.redirect("/logs");
  } catch (err) {
    res.status(400).send(err);
  }
});

//edit route
router.get("/:id/edit", async (req, res) => {
  try {
    //finding doc that we want to edit, and passing it to the Edit.js file//
    const editLog = await Logs.findById(req.params.id);
    res.render("Edit", { logs: editLog });
  } catch (err) {
    res.status(400).send(err);
  }
});

//show route
router.get("/:id", async (req, res) => {
  try {
    const selectLog = await Logs.findById(req.params.id);
    res.render("Show", { logs: selectLog });
  } catch (err) {
    res.status(400).send(err);
  }
});

module.exports = router;
